# Copyright (c) Jupyter Development Team.
# Distributed under the terms of the Modified BSD License.

FROM node:6

# Add our user and group first to make sure their IDs get assigned consistently
RUN groupadd -r app && useradd -r -g app app 


# Create a directory which will contain notebooks
RUN mkdir -p /srv/app/data && chown -R app:app /srv/app 
ENV NOTEBOOKS_DIR /srv/app/data
RUN ln -s /srv/app /home/app 

USER app
RUN mkdir -p /home/app/app/ext

WORKDIR /home/app/app

# npm install separately, so it is properly cached by docker and not affected by
# changes in rest of source
ADD dashboards_server/package.json package.json
RUN npm install --quiet

# Switching users is a little odd, but we are following https://github.com/jupyter-incubator/dashboards_server/blob/master/Dockerfile.server
USER root
ADD dashboards_server /home/app/app
RUN chown app:app /home/app/app && \
    chown -R app:app /home/app/app/data && \
chown -R app:app /home/app/app/public
ADD runner.sh /home/app/app/runner.sh
RUN chown app:app /home/app/app/runner.sh && \
    chmod u+x /home/app/app/runner.sh

USER app
RUN npm run build

# Always expose server on all interfaces in a container
ENV IP 0.0.0.0
# Expose the default express http/https port (3000/3001)
#EXPOSE 3000 3001

# Allow override of dashboard package version
#ARG DASHBOARDS_SERVER_VER

# Install the dashboard server as root so that the files are protected.
# npm throws an error when installing a dependency, because we
# are root. This setting works around that issue.
#   RUN npm config set unsafe-perm true && \
#       npm install -g jupyter-dashboards-server@"$DASHBOARDS_SERVER_VER" && \
#       npm config set unsafe-perm false


# run as unprivileged user
USER app
WORKDIR /srv/app/app
#CMD ["jupyter-dashboards-server"]

#ENTRYPOINT ["npm", "run"]
#RUN  echo $PATH
#RUN which npm
#CMD ["npm run start"]

CMD ["/home/app/app/runner.sh"]
