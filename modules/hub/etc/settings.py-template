"""
Django settings for kooplex project.
"""

from os import path

PROJECT_ROOT = path.dirname(path.abspath(path.dirname(__file__)))

DEBUG = True

ALLOWED_HOSTS = (
    'localhost',
)

ADMINS = (
    # ('Your Name', 'your_email@example.com'),
)

MANAGERS = ADMINS

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': '##HUBDB##',
        'USER': '##HUBDBUSER##',
        'PASSWORD': '##HUBDBPW##',
        'HOST': '##DBHOST##',
        'PORT': '3306',
    }
}

KOOPLEX_OUTER_HOST = '##OUTERHOST##'
KOOPLEX_INTERNAL_HOST = '##INNERHOST##'
KOOPLEX_INTERNAL_HOSTNAME = '##INNERHOSTNAME##'
KOOPLEX_OUTER_PORT = '##OUTERPORT##'

PROTOCOL = "##PROTOCOL##"
KOOPLEX_BASE_URL = PROTOCOL + '://' + KOOPLEX_OUTER_HOST
KOOPLEX_HUB_PREFIX = 'hub'

KOOPLEX = {
    'debug': {
        'debug': True,
    },
    'prefix':{
        'name': '##PREFIX##',
    },
    'hub': {
        'internal_host' : KOOPLEX_INTERNAL_HOST,
        'outer_host' : KOOPLEX_OUTER_HOST,
        'host_port' : KOOPLEX_OUTER_PORT,
        'protocol' : PROTOCOL,
    },
    'session': {
    	'base_url': 'http://%s' %(KOOPLEX_INTERNAL_HOST),
    },
    'ldap': {
        'host': '##PREFIX##-ldap',
        'port': 389,
        'base_dn': '##LDAPBASEDN##',
        'bind_username': '##LDAPUSER##',
        'bind_password': '##LDAPBINDPW##',
    },
    'gitlab': {
        'base_url': 'http://##PREFIX##-gitlab/gitlab/',
        'base_repourl': 'http://##PREFIX##-gitlab',
        'ssh_cmd': r'/usr/bin/ssh',
        'ssh_host': '##PREFIX##-gitlab',
        'ssh_port': 22,
        'admin_username': '##GITLABADMIN##',
        'admin_password': '##GITLABADMINPW##',
        'ssh_key_password': '##GITLABADMINKEYPW##',
    },
    'gitlabdb': {
        'hostname': '##PREFIX##-gitlabdb',
        'psql_port': 5432,
        'db_username': '##GITLABDBUSER##',
        'db_password': '##GITLABDBPW##',
    },
    'docker': {
        'host': '##DOCKERHOST##', 
        'port': '##DOCKERPORT##',
        'network': '##PREFIX##-net',
        'protocol':'##DOCKERPROTOCOL##',
    },
    'spawner': {
        'notebook_container_name': '##PREFIX##-notebook-{$username}-{$project_name}',
        'notebook_ip_pool': ['##IPPOOLLO##', '##IPPOOLHI##'],
        'notebook_proxy_path': '/notebook/{$username}/{$notebook.id}',
    },
    'proxy': {
        'host': KOOPLEX_INTERNAL_HOST,        
        'port': 8001, 
        'auth_token': '##PROXYTOKEN##',
        'external_url': '%s/' % KOOPLEX_BASE_URL,
    },
    'owncloud': {
        'base_url': '%s/owncloud/' % KOOPLEX_BASE_URL,
    },
    'dashboards': {
        'dir': '{$image_postfix}',
        'prefix': 'dashboards',
        'url_prefix': '/db/{$dashboard_port}',
        'base_url': '%s/' % KOOPLEX_BASE_URL,
    },
    'report_server': {
        'max_number': 20,
    },
    'impersonator': {
        'container_name' : '##PREFIX##-impersonator'
    },
}

TEMPLATES =  [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'OPTIONS': {
            'context_processors': [
                'django.contrib.auth.context_processors.auth',
                'kooplex.lib.extra_context.extra_context',
            ],
            'debug': DEBUG,
            'loaders': [
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
            ]
        },
    },
]

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'kooplex.lib.auth.Auth',
)

TIME_ZONE = 'Europe/Berlin'
LANGUAGE_CODE = 'en-us'
SITE_ID = 1
USE_I18N = True
USE_L10N = True
USE_TZ = True
MEDIA_ROOT = ''
MEDIA_URL = ''
STATIC_ROOT = path.join(PROJECT_ROOT, 'static').replace('\\', '/')
STATIC_URL = '/static/'
STATICFILES_DIRS = (
)

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)

SECRET_KEY = 'n(bd1f1c%e8=_xad02x5qtfn%wgwpi492e$8_erx+d)!tpeoim'

MIDDLEWARE_CLASSES = (
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'threadlocals.middleware.ThreadLocalMiddleware',
)

SESSION_ENGINE = 'django.contrib.sessions.backends.signed_cookies'
CORS_ORIGIN_ALLOW_ALL = True

ROOT_URLCONF = 'kooplex.urls'

WSGI_APPLICATION = 'kooplex.wsgi.application'

INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'kooplex.hub.apps.HubConfig',
    'kooplex.hub.templatetags',
    'django.contrib.admin',
    'django.contrib.admindocs',
)

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'oauth2_provider.ext.rest_framework.OAuth2Authentication',
    )
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
    }
}

TEST_RUNNER = 'django.test.runner.DiscoverRunner'
