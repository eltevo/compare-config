# Copyright (c) Jupyter Development Team.
# Distributed under the terms of the Modified BSD License.

# Pin to a known release for sanity

FROM kooplex-notebook-base

# Become root to do the apt-gets
#USER root

RUN pip3 install pandas  seaborn plotly igraph bokeh lifelines
RUN python3 --version

# TODO add jupyter stuff

# Configure environment
ENV CONDA_VER "4.1.11"
ENV CONDA_DIR /opt/conda
ENV PATH $CONDA_DIR/bin:$PATH
ENV SHELL /bin/bash
ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US.UTF-8

# Create conda dir
RUN mkdir -p $CONDA_DIR

# Install conda
RUN cd /tmp && \
    mkdir -p $CONDA_DIR && \
    wget --quiet https://repo.continuum.io/miniconda/Miniconda3-$CONDA_VER-Linux-x86_64.sh && \
    # echo "9ea57c0fdf481acf89d816184f969b04bc44dea27b258c4e86b1e3a25ff26aa0 *Miniconda3-3.19.0-Linux-x86_64.sh" | sha256sum -c - && \
    /bin/bash Miniconda3-$CONDA_VER-Linux-x86_64.sh -f -b -p $CONDA_DIR && \
    rm Miniconda3-$CONDA_VER-Linux-x86_64.sh && \
    $CONDA_DIR/bin/conda install --quiet --yes conda && \
    $CONDA_DIR/bin/conda config --system --add channels conda-forge 

RUN    $CONDA_DIR/bin/conda install --quiet --yes 'jupyter_core==4.2' && \
    $CONDA_DIR/bin/conda install --quiet --yes 'notebook==4.2.2' && \
    $CONDA_DIR/bin/conda install --quiet --yes 'jupyterhub' 

# Install Jupyter notebook
# RUN conda clean -tipsy


# Do the pip installs as the unprivileged notebook user

# Install dashboard layout and preview within Jupyter Notebook
#ARG DASHBOARDS_VER
RUN pip install "jupyter_dashboards" && \
        jupyter dashboards quick-setup --sys-prefix

RUN pip install --upgrade pip
RUN pip install pandas


# Install content management to support dashboard bundler options
#ARG CMS_VER
#ARG BUNDLER_VER
RUN pip install "jupyter_cms" && \
        jupyter cms quick-setup --sys-prefix
RUN pip install "jupyter_dashboards_bundlers" && \
        jupyter dashboards_bundlers quick-setup --sys-prefix

RUN pip install matplotlib
RUN apt install -y git


RUN conda install -c conda-forge jupyter_contrib_nbextensions

RUN apt update
RUN apt install -y pandoc  texlive-latex-base texlive-latex-recommended 
RUN apt install -y texlive-pictures texlive-latex-extra texlive-fonts-recommended


# Install declarative widgets for Jupyter Notebook
#ARG DECLWIDGETS_VER
RUN pip3 install ipywidgets holoviews pytexit
RUN pip3 install "jupyter_declarativewidgets" && \
        jupyter declarativewidgets quick-setup --sys-prefix

#RUN pip3 install -U https://github.com/ipython-contrib/IPython-notebook-extensions/archive/master.zip --user
#RUN jupyter contrib nbextensions migrate
#RUN jupyter contrib nbextension install --user
#RUN jupyter nbextension enable codefolding/main
#RUN pip install jupyter_nbextensions_configurator
#RUN jupyter nbextensions_configurator enable                                              
#RUN jupyter-nbextensions_configurator enable

# rise (slides)
RUN pip install RISE
RUN jupyter-nbextension install rise --py --sys-prefix
RUN jupyter-nbextension enable rise --py --sys-prefix




RUN chmod a+rxw $CONDA_DIR

# nb-extension
RUN pip install https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tarball/master
RUN jupyter contrib nbextension install --system --symlink
RUN jupyter contrib nbextensions migrate
RUN pip install jupyter_nbextensions_configurator
RUN jupyter nbextensions_configurator enable --system

RUN jupyter nbextension enable codefolding/main
RUN jupyter nbextension enable hide_input/main
RUN jupyter nbextension enable hide_input_all/main
# Stay as jovyan in the newer docker stack images
# Add local files as late as possible to avoid cache busting
ADD scripts/start-notebook.sh /usr/local/bin/start-notebook.sh
ADD scripts/start-singleuser.sh /usr/local/bin/start-singleuser.sh
ADD scripts/start.sh /usr/local/bin/start.sh

#RUN chmod 775 /usr/local/bin/start-notebook.sh /usr/local/bin/start-singleuser.sh


