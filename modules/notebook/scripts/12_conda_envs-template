# manage symbolic links under user's conda env directory
CONDA_ENVS=/home/$NB_USER/.conda/envs
if [ ! -d $CONDA_ENVS ] ; then
  echo "recreating $CONDA_ENVS"
#  su $NB_USER bash -c "mkdir -p $CONDA_ENVS"
  mkdir -p $CONDA_ENVS
fi

# SO THAT WE DON'T GET A WARNING WHEN ENTERING CONDA TAB
[ -d /opt/conda/ ] && [ ! -d $CONDA_ENVS/conda ] && ln -s /opt/conda/ $CONDA_ENVS/conda

#FIXME: gid hardcoded, left here to lazy set formerly screwed permissions
#chown -R $NB_USER:9998 /home/$NB_USER/.conda
#

# To be able to create custom conda kernels per user
mkdir -p /home/$NB_USER/.conda/pkgs && chmod a+swr /home/$NB_USER/.conda/pkgs/
 
if [ -e ##FUNCTIONAL_VOLUME_MOUNT_POINT##/*/condaenvs/*/ ]; then
 
  for d in ##FUNCTIONAL_VOLUME_MOUNT_POINT##/*/condaenvs/*/ ; do
    volname=$(echo $d | cut -f3 -d\/)
    LINK=$CONDA_ENVS/$volname
    if [ ! -e $LINK ] ; then
        echo "creating symlink $LINK"
        ln -s $d $LINK
    elif [ -h $LINK ] ; then
        if [ $(realpath $LINK) != $(echo $d | sed s/'\/$'//) ] ; then
            echo "link $LINK exists and points to somewhere else, randomize the name"
            ln -s $d ${LINK}.$(mktemp -u | sed s/[^\.]*\.//)
        fi
    else
        echo "file or dir $LINK exists, randomize the name"
        ln -s $d ${LINK}.$(mktemp -u | sed s/[^\.]*\.//)
    fi
  done
fi
#
